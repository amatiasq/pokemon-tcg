// Generated by https://quicktype.io

export interface ApiCard {
  id: string;
  name: string;
  supertype: Supertype;
  subtypes: string[];
  set: ApiSet;
  number: string;
  legalities: Legalities;
  images: CardImages;
  hp?: string;
  types?: RetreatCost[];
  attacks?: Attack[];
  weaknesses?: Resistance[];
  resistances?: Resistance[];
  retreatCost?: RetreatCost[];
  convertedRetreatCost?: number;
  artist?: string;
  rarity: Rarity;
  flavorText?: string;
  nationalPokedexNumbers?: number[];
  regulationMark?: RegulationMark;
  abilities?: Ability[];
  rules?: string[];
  evolvesFrom?: string;
  evolvesTo?: string[];
}

interface Ability {
  name: string;
  text: string;
  type: Type;
}

enum Type {
  Ability = 'Ability',
}

interface Attack {
  name: string;
  cost: RetreatCost[];
  convertedEnergyCost: number;
  damage: string;
  text?: string;
}

enum RetreatCost {
  Colorless = 'Colorless',
  Darkness = 'Darkness',
  Dragon = 'Dragon',
  Fighting = 'Fighting',
  Fire = 'Fire',
  Free = 'Free',
  Grass = 'Grass',
  Lightning = 'Lightning',
  Metal = 'Metal',
  Psychic = 'Psychic',
  Water = 'Water',
}

interface CardImages {
  small: string;
  large: string;
}

interface Legalities {
  unlimited: Expanded;
  standard?: Expanded;
  expanded: Expanded;
}

enum Expanded {
  Legal = 'Legal',
}

enum Rarity {
  Common = 'Common',
  DoubleRare = 'Double Rare',
  HyperRare = 'Hyper Rare',
  IllustrationRare = 'Illustration Rare',
  Promo = 'Promo',
  RadiantRare = 'Radiant Rare',
  Rare = 'Rare',
  RareHolo = 'Rare Holo',
  RareHoloV = 'Rare Holo V',
  RareHoloVMAX = 'Rare Holo VMAX',
  RareShinyGX = 'Rare Shiny GX',
  RareUltra = 'Rare Ultra',
  Uncommon = 'Uncommon',
}

enum RegulationMark {
  D = 'D',
  E = 'E',
  F = 'F',
  G = 'G',
}

interface Resistance {
  type: RetreatCost;
  value: string;
}

interface ApiSet {
  id: string;
  name: string;
  series: Series;
  printedTotal: number;
  total: number;
  legalities: Legalities;
  ptcgoCode?: string;
  releaseDate: string;
  updatedAt: string;
  images: SetImages;
}

interface SetImages {
  symbol: string;
  logo: string;
}

enum Series {
  ScarletViolet = 'Scarlet & Violet',
  SunMoon = 'Sun & Moon',
  SwordShield = 'Sword & Shield',
  Xy = 'XY',
}

enum Supertype {
  Energy = 'Energy',
  Pokémon = 'Pokémon',
  Trainer = 'Trainer',
}
